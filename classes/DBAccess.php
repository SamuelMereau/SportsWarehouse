<?php
    /**
     * Accesses a database
     * 
     * @author Samuel Mereau
     */
    class DBAccess 
    {
        private string $_dsn;
        private string $_username;
        private string $_password;
        private object $_pdo;
        
        /**
         * Creates an object with methods to access a database
         * 
         * @param string $dsn The Data Source Name (like a SQL Server Connection String)
         * @param string $username Username to connect to database with
         * @param string $password Password to connect to database with
         */
        public function __construct(string $dsn, string $username, string $password)
        {
            $this->_dsn = $dsn;
            $this->_username = $username;
            $this->_password = $password;
        }

        /**
         * Establishes a connection with the database
         * 
         * @return object PDO Connection
         * @throws \Exception Thrown if connection to database fails 
         */
        public function connect()
        {
            try
            {
                $this->_pdo = new PDO($this->_dsn, $this->_username, $this->_password);
                $this->_pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            }
            catch(PDOException $e)
            {
                die("Connection failed: " . $e->getMessage());
            }

            return $this->_pdo;
        }

        /**
         * Disconnects from the database
         */
        public function disconnect()
        {
            $this->_pdo = "";
        }

        /**
         * Executes an SQL query as a DQL statement
         * 
         * @param object $stmt SQL query to execute
         * 
         * @return array Returned rows from query
         * @throws \Exception Thrown if the query fails to execute
         */
        public function executeSQL($stmt)
        {
            try
            {
                $stmt->execute();
                $rows = $stmt->fetchAll();
            }
            catch(PDOException $e)
            {
                die("Query failed: " . $e->getMessage());
            }
    
            return $rows;
        }

        /**
         * Executes an SQL query as a DQL statement, can only return one value
         * 
         * @param object $stmt SQL query to execute
         * 
         * @return mixed Returned value from query
         * @throws \Exception Thrown if the query fails to execute
         */
        public function executeSQLReturnOneValue($stmt)
        {
            try
            {
                $stmt->execute();
                $value = $stmt->fetchColumn();
            }
            catch(PDOException $e)
            {
                die("Query failed: " . $e->getMessage());
            }
    
            return $value;
        }

        /**
         * Executes an SQL query as a non-DQL statement (DDL, DML, etc.)
         * 
         * @param object $stmt SQL query to execute
         * @param bool $pkid Set as true to return the primary key ID automatically generated by the database
         * 
         * @return mixed Returns the primary key of the inserted row if $pkid is true, 
         * otherwise will return true/false based on whether the query successfully executed
         * @throws \Exeception Thrown if the query fails to execute
         */
        public function executeNonQuery($stmt, $pkid=false)
        {
            try
            {
                $value = $stmt->execute();
                // Get the primary key ID generated by the DB
                if($pkid == true)
                {
                    $value = $this->_pdo->lastInsertId();
                }
            }
            catch(PDOException $e)
            {
                die("Query failed: " . $e->getMessage());
            }
    
            // Return the primary key if one was generated otherwise returns true/false
            return $value;
        }
    }
?>